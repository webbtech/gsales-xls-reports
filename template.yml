AWSTemplateFormatVersion : '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Description: >
  xls-reports

  Gales Sales XLS Reports Service

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 5

Parameters:
  ParamBillTo:
    Description: Required. Value of Tag key BillTo
    Type: String
    Default: "Gales"
  ParamCertificateArn:
    Description: Domain Certificate Arn
    Type: String
  ParamCustomDomainName:
    Description: Custom Domain Name
    Type: String
  ParamENV:
    Description: Stage environment
    Type: String
  ParamHostedZoneId:
    Description: Hosted Zone ID
    Type: String
  ParamReportBucket:
    Description: Bucket for report files
    Type: String
  ParamSSMPath:
    Description: SSM Params path
    Type: String
  ParamUserPoolArn:
    Description: Cognito User Pool Arn
    Type: String

Resources:
  RestApi:
    Type: AWS::Serverless::Api
    DeletionPolicy: Delete
    DependsOn: ReportsFunction
    Properties:
      StageName: Prod
      EndpointConfiguration: 
        Type: REGIONAL
      Cors: # NOTE: these could be tightened up some
        AllowMethods: "'*'"
        AllowHeaders: "'*'"
        AllowOrigin: "'*'" # TODO: add an origin here
        
      # Auth docs: https://github.com/aws/serverless-application-model/blob/master/versions/2016-10-31.md#api-auth-object
      Auth:
        DefaultAuthorizer: MyCognitoAuthorizer
        Authorizers:
          MyCognitoAuthorizer:
            UserPoolArn: !Ref ParamUserPoolArn
            # Identity:
              # ReauthorizeEvery: 20 # For testing purposes, default is 300

      # Documentation for below: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#gateway-response-object
      # his property does not work with sam local
      GatewayResponses:
        UNAUTHORIZED:
          StatusCode: "401"
          ResponseTemplates: 
            "application/json": '{ "message": $context.error.messageString }'
          ResponseParameters:
            Headers:
              Access-Control-Expose-Headers: "'WWW-Authenticate'"
              Access-Control-Allow-Origin: "'*'"
              Access-Control-Allow-Headers: "'*'"

      # Docs for this at: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#gateway-response-object
      Domain:
        DomainName: !Ref ParamCustomDomainName
        CertificateArn: !Ref ParamCertificateArn
        EndpointConfiguration: "REGIONAL"
        Route53:
          HostedZoneId: !Ref ParamHostedZoneId
          EvaluateTargetHealth: true
          DistributionDomainName:
            Value: !Sub "https://${RestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"

  ReportsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: report
      Runtime: go1.x
      Architectures:
        - x86_64
        # - arm64 # although a better architecture, it's not supported in ca-central-1 (yet?) see https://filia-aleks.medium.com/aws-lambda-battle-x86-vs-arm-graviton2-perfromance-3581aaef75d9
      Tracing: Active
      Role: !GetAtt ReportsRole.Arn
      Timeout: 20
      MemorySize: 1028
      Environment:
        Variables:
          Stage: !Ref ParamENV
      VpcConfig:
        SubnetIds:
          - subnet-015e4e939f9bb2f89
          - subnet-0e146cd98e8e15e25
          - subnet-0edd64d562d0a0a03
        SecurityGroupIds:
          - sg-00223abd5286c9b96
      Tags:
        BillTo: !Ref ParamBillTo
      Events:
        Ping:
          Type: Api
          Properties:
            Path: /
            Method: GET
            RestApiId: !Ref RestApi
            Auth:
              Authorizer: NONE
        Report:
          Type: Api
          Properties:
            Path: /
            Method: POST
            RestApiId: !Ref RestApi
        Any:
          Type: Api
          Properties:
            Path: /
            Method: ANY
            RestApiId: !Ref RestApi
            Auth:
              Authorizer: NONE
        Options:
          Type: Api
          Properties:
            Path: /
            Method: OPTIONS
            RestApiId: !Ref RestApi
            Auth:
              Authorizer: NONE

  ReportsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName: FunctionParameterAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - ssm:GetParametersByPath
            Resource:
              Fn::Sub: arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${ParamENV}/${ParamSSMPath}
      - PolicyName: FunctionLogAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: '*'
      - PolicyName: FunctionXRayAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - xray:PutTraceSegments
            - xray:PutTelemetryRecords
            Resource: '*'
      - PolicyName: FunctionS3Access
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - s3:*
            Resource: 
              Fn::Sub: arn:aws:s3:::${ParamReportBucket}/*
      - PolicyName: FunctionVPCAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - ec2:CreateNetworkInterface
            - ec2:DeleteNetworkInterface
            - ec2:DescribeNetworkInterfaces
            Resource: '*'
  
Outputs:
  ApiId:
    Description: API ID
    Value:
      Ref: RestApi
  ApiEndpoint:
    Description: "API Prod stage endpoint"
    Value: !Sub "https://${RestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  ApiArn:
    Description: "API ARN"
    Value: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApi}/"
  ApiFQDN:
    Description: "API Domain Name"
    Value: !Ref ParamCustomDomainName
  ApiURL:
    Description: "API Url"
    Value: !Sub "https://${ParamCustomDomainName}"
  ReportsFunctionArn:
    Description: "ReportsFunction ARN"
    Value: !GetAtt ReportsFunction.Arn
  ReportsRoleArn:
    Description: "Reports Role ARN"
    Value: !GetAtt ReportsRole.Arn